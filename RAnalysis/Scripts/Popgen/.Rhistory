geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
# Scatter plot axis 1 vs. 2
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
?geom_segment
# Scatter plot axis 1 vs. 2
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_treatment_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_treatment)
dev.off()
# Scatter plot axis 1 vs. 2
DPCA_QTL_generation <- ggplot(data = ind_coords.Qtl_generation, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_generation,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_generation)+
scale_colour_manual(values = seq.Qtl_generation)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge                            # custom labels
labs(x = xlab.Qtl_generation,
y = ylab.Qtl_generation)+
ggtitle("QTL results generation main effect: DAPC") +
custom_theme
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_gen_DAPC.pdf", width =6, height = 6)
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_gen_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_generation)
dev.off()
# Scatter plot axis 1 vs. 2
DPCA_QTL_gentreatment <- ggplot(data = ind_coords.Qtl_interaction, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4, size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_interaction,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_interaction)+
scale_colour_manual(values = seq.Qtl_interaction)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_interaction,
y = ylab.Qtl_interaction)+
ggtitle("QTL results gen * treatment: DAPC") +
custom_theme
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_genXtreatment_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_gentreatment)
dev.off()
seq.Qtl_interaction = c("grey50" , "grey50", "grey50", "grey50", "grey50", "grey50", "grey50", "grey50")
# Scatter plot axis 1 vs. 2
DPCA_QTL_gentreatment <- ggplot(data = ind_coords.Qtl_interaction, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4, size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_interaction,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_interaction)+
scale_colour_manual(values = seq.Qtl_interaction)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_interaction,
y = ylab.Qtl_interaction)+
ggtitle("QTL results gen * treatment: DAPC") +
custom_theme
DPCA_QTL_gentreatment
# Scatter plot axis 1 vs. 2
DPCA_QTL_generation <- ggplot(data = ind_coords.Qtl_generation, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_generation,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_generation)+
scale_colour_manual(values = seq.Qtl_generation)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge                            # custom labels
labs(x = xlab.Qtl_generation,
y = ylab.Qtl_generation)+
ggtitle("QTL results generation main effect: DAPC") +
custom_theme
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_gen_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_generation)
dev.off()
# Scatter plot axis 1 vs. 2
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_treatment_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_treatment)
dev.off()
ind_coords.Qtl_treatment
ind_coords.Qtl_treatment  %>%  mutate(Generation = gsub('*._','', Site)
ind_coords.Qtl_treatment  %>%  mutate(Generation = gsub('*._','', Site))
ind_coords.Qtl_treatment  %>%  mutate(Generation = gsub('*._','', Site))
ind_coords.Qtl_treatment  %>%  mutate(Generation = gsub('_.*','', Site))
ind_coords.Qtl_treatment <- ind_coords.Qtl_treatment  %>%  mutate(Generation = gsub('_.*','', Site))
alpha.Qtl_treatment = c(0.2, 0.4 , 0.6)
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
alpha.Qtl_treatment = c(0.2, 0.6 , 0.8)
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
?scale_alpha_manual
alpha.Qtl_treatment
levels(ind_coords.Qtl_treatment$Generation)
ind_coords.Qtl_treatment <- ind_coords.Qtl_treatment  %>%  mutate(Generation = gsub('_.*','', Site))
levels(ind_coords.Qtl_treatment$Generation)
ind_coords.Qtl_treatment <- ind_coords.Qtl_treatment  %>%  as.factor(mutate(Generation = gsub('_.*','', Site)))
ind_coords.Qtl_treatment <- ind_coords.Qtl_treatment  %>%  mutate(Generation = as.factor(gsub('_.*','', Site)))
levels(ind_coords.Qtl_treatment$Generation)
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
alpha.Qtl_treatment = c(0.2, 0.6 , 4)
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), alpha = 0.4,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
alpha.Qtl_treatment = c(0.2, 0.6 , 0.8)
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
alpha.Qtl_treatment = c(0.2, 0.4 , 0.6)
DPCA_QTL_treatment <- ggplot(data = ind_coords.Qtl_treatment, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_treatment,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_treatment)+
scale_colour_manual(values = seq.Qtl_treatment)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_treatment,
y = ylab.Qtl_treatment)+
ggtitle("QTL results treatment main effect: DAPC") +
custom_theme
DPCA_QTL_treatment
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_treatment_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_treatment)
dev.off()
ind_coords.Qtl_generation <- ind_coords.Qtl_generation  %>%  mutate(Generation = as.factor(gsub('_.*','', Site)))
alpha.Qtl_generation = c(0.2, 0.4 , 0.6)
ind_coords.Qtl_generation <- ind_coords.Qtl_generation  %>%  mutate(Generation = as.factor(gsub('_.*','', Site)))
alpha.Qtl_generation = c(0.2, 0.4 , 0.6)
DPCA_QTL_generation <- ggplot(data = ind_coords.Qtl_generation, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation), ,size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_generation,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_generation)+
scale_colour_manual(values = seq.Qtl_generation)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_generation,
y = ylab.Qtl_generation)+
ggtitle("QTL results generation main effect: DAPC") +
custom_theme
DPCA_QTL_generation
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_gen_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_generation)
dev.off()
ind_coords.Qtl_gentreatment <- ind_coords.Qtl_gentreatment  %>%  mutate(Generation = as.factor(gsub('_.*','', Site)))
ind_coords.Qtl_interaction <- ind_coords.Qtl_interaction  %>%  mutate(Generation = as.factor(gsub('_.*','', Site)))
alpha.Qtl_interactiont = c(0.2, 0.4 , 0.6)
DPCA_QTL_gentreatment <- ggplot(data = ind_coords.Qtl_interaction, aes(x = Axis1, y = Axis2))+
geom_hline(yintercept = 0)+
geom_vline(xintercept = 0)+
# spider segments
geom_segment(aes(xend = Axis1.cen, yend = Axis2.cen, colour = Site), size = 0.1, alpha = 0.2, show.legend = FALSE)+
# points
geom_point(aes(fill = Site, shape = Site, alpha = Generation),  size = 3, show.legend = FALSE)+
# centroids
geom_label(data = centroid.Qtl_interaction,
aes(label = Site, fill = Site),
size = 4, show.legend = FALSE)+
# colouring
scale_fill_manual(values = cols.Qtl_interaction)+
scale_colour_manual(values = seq.Qtl_interaction)+
scale_alpha_manual(values = alpha.Qtl_treatment)+
# custom shape
scale_shape_manual(values = c(21,21, # F1 are circles
22,22,22,# F2 are square
24,24,24)) +# F3 are triannlge
# custom labels
labs(x = xlab.Qtl_interaction,
y = ylab.Qtl_interaction)+
ggtitle("QTL results gen * treatment: DAPC") +
custom_theme
DPCA_QTL_gentreatment
pdf("RAnalysis/Output/Popgen/qtl/All_QTL_genXtreatment_DAPC.pdf", width =6, height = 6)
print(DPCA_QTL_gentreatment)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Popgen_OA/") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_Popgen_OA/") # Sam's
library(tidyverse)
library(lme4qtl)
library(devtools)
library(vcfR)
library(lme4)
# load bonferroni adjusted lme4qtl output
Bonferroni_qtl.df     <- read.csv("RAnalysis/Output/Popgen/qtl/All/All_QTL_bonferroni.csv", sep = ",", head = T) %>% select(!X)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Popgen_OA/") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_Popgen_OA/") # Sam's
# load bonferroni adjusted lme4qtl output
Bonferroni_qtl.df     <- read.csv("RAnalysis/Output/Popgen/qtl/All/All_QTL_bonferroni.csv", sep = ",", head = T) %>% select(!X)
install.packages("CMplot")
